// ACM Problem #8 - V 1.0.0
// Author: Dena, Rene
// Last Modified: 7/14/17

// _________________________Miscllanious_____________________________

// What's Given?:
 // N = Number of consecutive nights.
 // K = Reward points required for free night.
 // Total number of free nights: N / (K + 1).

#include <iostream>
#include <cstring>
#include <string>
#include <cctype>
#include <algorithm>
#include <list>
#include <iterator>
#include <numeric>

using namespace std;

// _________________________Functions________________________________

int NumberOfNights()
{
    while(true)
    {
        int numberOfnights;
        cout << "\nWhat is the number of consecutive nights(CN)?: ";
        cin >> numberOfnights;
        if(numberOfnights > 0) // && isdigit(numberOfnights)
        {
            cout << "\nAwesome!. Yov\'ve stated that your number of consecutive nights will be " << numberOfnights << "." << endl;
            return numberOfnights;
            break;
        }
        else
        {
            cout << "Please only ENTER a integer! >:|" << endl;
        }
    }
}


int PointsRequried()
{
    while (true)
    {
        int pointsRequried;
        cout << "\nWhat is the number of reward points required(RP)?: ";
        cin >> pointsRequried;
        if (pointsRequried > 0) // && isdigit(pointsRequried)
        {
            cout << "\nCool!. Yov\'ve stated that the number of reward points required to obtain a free night is " << pointsRequried << " points." << endl;
            return pointsRequried;
            break;
        }
        else
        {
            cout << "Please only ENTER a integer! >:|" << endl;
        }
    }
}



int FreeNights(list<int> costs, int K)
{
    int secondCost = 0;
    list<int> freeNights;
    int points = K;
    int i = 0;
    for(costs[i]; i==costs.size(); i++) // ???
    {
        int x = costs[i]
        secondCost += x;
        if(points == K)
        {
            freeNights.push_back(x); // Push_front ?
            freeNights.sort();
            points = 0;
        }
        else
        {
            points += 1;
            auto index = freeNights.begin();
            advance(index, 0);
            int indexNumber = *index;
            if(freeNights.size() > 0 && x > indexNumber)
            {
                indexNumber = x;
                freeNights.sort();
            }
        }
    }
    int sum = accumulate(begin(freeNights), end(freeNights), 0.0);
    int secondCost -= sum;
    return secondCost;

}



void MainConsole()
{
    cout << "\n\t\tWelcome to the MAIN CONSOLE!" << endl;
    cout << "\nIn order to begin the process, you\'ll first need to enter the number of consecutive nights(CN) for your vacation." << endl;

    int numberOfnights;
    numberOfnights = NumberOfNights();

    cout << "\nNext you\'ll be promoted to enter the amount of reward points(RP) required to obtain a free night." << endl;

    int pointsRequried;
    pointsRequried = PointsRequried();
    
    cout << "\nNext, you\'ll need to enter the price for each of your " << numberOfnights << " hotels." << endl;
    cout << "Let\'s do that now!" << endl;


    // Using a List
    list<int> pricePerRoom;
    int i = 0;
    while(1)
    {
        i +=1;
        int price;
        printf("Enter the price for hotel #%d: ", i);
        cin >> price;
        pricePerRoom.push_back(price);
        if(i == numberOfnights)
            break;
    }

    printf("\nNice! You have now entered the prices per all %d of the hotels.", numberOfnights);

    cout << "\nWe will now get to work and calculate the utmost cost-effective option for you." << endl;

    cout << "\nProcess will now begin." << endl;
    cout << "\n\t\tProcess now in progress:" << endl;
    cout << "\nPROGRESS COMPLETION 35/100....." << endl;
    cout << "PROGRESS COMPLETION 55/100....." << endl;
    cout << "PROGRESS COMPLETION 67/100....." << endl;
    cout << "PROGRESS COMPLETION 82/100....." << endl;
    cout << "PROGRESS COMPLETION 98/100....." << endl;
    cout << "\n\t\tPROGRESS COMPLETE!" << endl;
    cout << "\nNow taking you to our REPORT!" << endl;
    cout << "\nLOADING..............." << endl;
    cout << "\nDONE!" << endl;


    int firstCost = 0;
    int j = 0;
    while(1)
    {
        j += 1;
        firstCost += pricePerRoom.front();
        pricePerRoom.pop_front();
        if(j == pointsRequried)
            break;
    }

    int fin = FreeNights(pricePerRoom, pointsRequried);

    cout << "\nGiven the number of consecutive nights will be " << numberOfnights << " nights whilst the number of reward points required to obtain a free night is " << pointsRequried << " points, where;" << endl;
    int k = numberOfnights + 1;
    while(1)
    {
        numberOfnights -= 1;
        k -= 1;
        auto index = pricePerRoom.begin();
        advance(index, numberOfnights);
        int indexNumber = *index;
        printf("Hotel #%d costs: $%d", k, indexNumber);  // Pulling an index
        cout << endl;
        if(k == 1)
            break;
    }

    int secondCost;
    int totalCost = firstCost + secondCost;
    printf("\nYour minimum possible cost for your holiday accommodations is $%d.", totalCost);

    while(true)
    {
        string playAgain;
        cout << "\nWould you like to re-run the script with new inputs? Please ENTER \"yes\" or \"no\": " << endl;
        cin >> playAgain;
        if(playAgain == "yes" or playAgain == "YES")
        {
            cout << "\nAwesome! You\'ve selected to RE-RUN the script." << endl;
            cout << "\nHeading to the MAIN CONSOLE now." << endl;
            cout << "\nLOADING..............." << endl;
            MainConsole();
            break;
        }
        else if(playAgain == "no" or playAgain == "NO")
        {
            cout << "\nYou\'ve decided you would NOT like to re-run the script. Blows! :|" << endl;
            cout << "\nHope we\'ve helped and hope to see you back soon." << endl;
            cout << "\nWe will now kick you from script." << endl;
            cout << "\nLOADING..............." << endl;
            cout << "\nYou have now been kicked from script." << endl;
            cout << "\nGOOD DAY! :P" << endl;
            cout << "\n" << endl;
            break;
        }
        else
            cout << "\nPlease only ENTER \"yes\" (or) \"no\"! >:|" << endl;
    }
}



// _________________________Strictly Script__________________________

int main()
{
    cout << "\n\t\t\tWelcome to the \"Hotel Rewards Script\"!\n" << endl;

    while(true)
    {
        string name;
        cout << "\nBefore we begin, what is your name?: " << endl;
        getline (cin, name);
        if (name.length() > 0) // && name.isalpha()
        {
            cout << "\nAwesome! We can now begin " << name << "." << endl; // toupper(name)
            break;
        }
        else
        {
            cout << "\nCANNOT continue if space was left empty." << endl;
            cout << "Please be sure to ENTER your name using a-z characters only! >:|" << endl;
        }
    }

    cout << "\nYou will now be taken to the MAIN CONSOLE." << endl;
    cout << "\nHeading there now....." << endl;
    cout << "\nLOADING..............." << endl;

    MainConsole();

    return 0;
}
